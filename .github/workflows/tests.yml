name: concert tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master, decentralize, stuff-after-decentralized ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Print python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -qq libtiff5-dev python3-tango expect
        python -m pip install --upgrade pip
        pip install flake8 pytest coverage scikit-image pytango pooch
        pip install .
    - name: Start tango servers for tests in background
      run: |
        run_server_detached concert tango walker --port 1200
        # run_server_detached concert tango reco --port 1204
        run_server_detached TangoRemoteWalker test -nodb --port 1201 --dlist concert/tango/walker
        # run_server_detached TangoOnlineReco test -nodb --port 1205 --dlist concert/tango/reco
    - name: Test with pytest
      run: |
        coverage run --source=concert -m pytest --ignore=concert/tests/integration/scenarios -m "not skip_ci" 
    - name: Convert coverage to xml
      if: matrix.python-version == '3.12'
      run: |
        coverage xml --omit="concert/tests/util/_package/_module.py"
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        files: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
